{"version":3,"file":"static/js/447.a365858f.chunk.js","mappings":"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","sources":["modules/MovieCard/MovieCard.styled.js","modules/MovieCard/MovieCard.jsx","pages/SIngleMoviePage/SingleMovie.styled.js","pages/SIngleMoviePage/SingleMoviePage.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\n\n\nexport const CardWrap = styled.div`\n  display: flex;\n  margin-top: 35px;\n`;\n\nexport const InfoWrap = styled.div`\n  margin-left: 35px;\n  width: 500px;\n`;\n\nexport const FilmPoster = styled.img`\n  display: block;\n  max-width: 100%;\n  height: auto;\n  border-radius: 5px;\n  width: 280px;\n  height: 400px;\n  margin-left: 35px;\n  box-shadow: rgb(0 0 0 / 70%) 5px 5px 13px 0px;\n  \n`;\n\nexport const Title = styled.p`\n  font-weight: bold;\n  font-size: 32px;\n  color: #25468e;\n  margin-bottom: 20px;\n`;\n\nexport const ReleaseDate = styled.p`\n  font-weight: bold;\n  color: #25468e;\n  margin-bottom: 15px;\n`;\n\nexport const UserScore = styled.p`\n  margin-bottom: 15px;\n`;\n\nexport const Overview = styled.p`\n  font-weight: bold;\n  margin-bottom: 5px;\n  color: #25468e;\n`;\n\nexport const OverviewText = styled.p`\n  margin-bottom: 15px;\n`;\n\nexport const Genres = styled.p`\n  font-weight: bold;\n  margin-bottom: 5px;\n  color: #25468e;\n`;\n\nexport const GenresList = styled.span`\n  margin-right: 5px;\n`;\n","// import PropTypes from 'prop-types';\n\nimport {\n  FilmPoster,\n  CardWrap,\n  InfoWrap,\n  Title,\n  ReleaseDate,\n  Overview,\n  UserScore,\n  OverviewText,\n  Genres,\n  GenresList,\n} from './MovieCard.styled';\nimport defaultImg from '../../defaultImg/defaultImg.jpg';\n\nexport default function MovieCard({\n  name,\n  title,\n  release_date,\n  overview,\n  vote_average,\n  poster_path,\n  backdrop_path,\n  genres,\n  original_title\n}) {\n  \n\n  const IMG_PATH = \"https://image.tmdb.org/t/p/w500/\";\n  const posterImg =\n    poster_path || backdrop_path\n      ? IMG_PATH + (poster_path ?? backdrop_path)\n      : defaultImg;\n\n  return (\n    <CardWrap>\n      <FilmPoster src={posterImg} alt={title} />\n      <InfoWrap>\n        <Title>{title || original_title || name}</Title>\n        <ReleaseDate>\n          Release date: {release_date && release_date.slice(0, 4)}\n        </ReleaseDate>\n        <UserScore>User Score: {Math.round(vote_average * 10)}%</UserScore>\n        <Overview>Overview:</Overview>\n        <OverviewText>{overview}</OverviewText>\n        <Genres>Genres</Genres>\n        <p>\n          {genres &&\n            genres.map(({ id, name }) => (\n              <GenresList key={id}>{name},</GenresList>\n            ))}\n        </p>\n      </InfoWrap>\n    </CardWrap>\n  );\n}\n\n// MovieCard.propTypes = {\n//   movieInfo: PropTypes.object.isRequired,\n// };\n","import styled from \"styled-components\";\n\nexport const SecondaryInfo = styled.ul`\n display: grid;\ngrid-template-rows: repeat(2, 1fr);\n/* grid-auto-rows: 5px; */\n`;\n\nexport const SecondaryInfoTitle = styled.p`\n  font-weight: bold;\n  color: #25468e;\n  margin-bottom: 15px;\n`;\n\nexport const BackButton = styled.button`\n  background-color: #3f51b5;\n  text-decoration: none;\n  color: fafafa;\n  display: inline-block;\n  padding: 10px 15px;\n  /* border: solid azure 1px; */\n  border-radius: 10px;\n  cursor: pointer;\n  margin-top: 10px;\n  margin-left: 15px;\n  width:100px;\n\n\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    background-color: #fff;\n  }\n`;","import { useParams,  useNavigate,  Link,  Outlet,  useLocation,} from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieDetails } from '../../services/api';\nimport MovieCard from '../../modules/MovieCard';\nimport { SecondaryInfo } from './SingleMovie.styled';\nimport { BackButton, SecondaryInfoTitle} from './SingleMovie.styled';\n\nconst SingleMoviePage = () => {\n  const [movie, setMovie] = useState({});\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from || '/';\n\n  useEffect(() => {\n    async function fetchMovieInfo() {\n      if (!id) {\n        return;\n      }\n\n      try {\n        const response = await getMovieDetails(id);\n        setMovie(response);\n        // console.log('movieDETAILs', response);\n      } catch (error) {\n        console.log('error', error);\n      }\n    }\n    fetchMovieInfo();\n  }, [id]);\n  return (\n    <>\n      <BackButton onClick={() => navigate(from)}>Go back</BackButton>\n      <MovieCard\n        name={movie.name}\n        title={movie.title}\n        release_date={movie.release_date}\n        overview={movie.overview}\n        vote_average={movie.vote_average}\n        poster_path={movie.poster_path}\n        backdrop_path={movie.backdrop_path}\n        genres={movie.genres}\n        original_title={movie.original_title}\n      />\n      <SecondaryInfo>\n        <Link to=\"cast\" state={{ from }}>\n          <SecondaryInfoTitle>Cast</SecondaryInfoTitle>\n        </Link>\n        <Link to=\"reviews\" state={{ from }}>\n          <SecondaryInfoTitle>Reviews</SecondaryInfoTitle>\n        </Link>\n        <Outlet context={id} />\n      </SecondaryInfo>\n    </>\n  );\n};\nexport default SingleMoviePage;\n","import axios from \"axios\";\n\nconst API_KEY = 'e2607c9eac62b5ef95e86e9fe77035f2';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const API_URL = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`;\n\n\n\nexport const getTrending = async () => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`\n  );  \n\n  return response.data.results;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false&`\n  );\n\n  return response.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`\n  );\n\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n\n  return response.data;\n};"],"names":["CardWrap","styled","InfoWrap","FilmPoster","Title","ReleaseDate","UserScore","Overview","OverviewText","Genres","GenresList","MovieCard","name","title","release_date","overview","vote_average","poster_path","backdrop_path","genres","original_title","posterImg","defaultImg","src","alt","slice","Math","round","map","id","SecondaryInfo","SecondaryInfoTitle","BackButton","useState","movie","setMovie","useParams","navigate","useNavigate","from","useLocation","state","useEffect","getMovieDetails","response","console","log","fetchMovieInfo","onClick","to","context","API_KEY","getTrending","axios","data","results","searchMovies","query","getMovieCredits","getMovieReviews"],"sourceRoot":""}