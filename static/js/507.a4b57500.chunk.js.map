{"version":3,"file":"static/js/507.a4b57500.chunk.js","mappings":"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","sources":["modules/MovieCard/MovieCard.styled.js","modules/MovieCard/MovieCard.jsx","pages/SIngleMoviePage/SingleMoviePage.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CardWrap = styled.div`\n  display: flex;\n  margin-top: 35px;\n`;\n\nexport const InfoWrap = styled.div`\n  margin-left: 35px;\n  width: 500px;\n`;\n\nexport const FilmPoster = styled.img`\n  display: block;\n  max-width: 100%;\n  height: auto;\n  border-radius: 5px;\n  width: 280px;\n  height: 400px;\n  margin-left: 35px;\n  box-shadow: rgb(0 0 0 / 70%) 5px 5px 13px 0px;\n`;\n\nexport const Title = styled.p`\n  font-weight: bold;\n  font-size: 32px;\n  color: #25468e;\n  margin-bottom: 20px;\n`;\n\nexport const ReleaseDate = styled.p`\n  font-weight: bold;\n  color: #25468e;\n  margin-bottom: 15px;\n`;\n\nexport const UserScore = styled.p`\n  margin-bottom: 15px;\n`;\n\nexport const Overview = styled.p`\n  font-weight: bold;\n  margin-bottom: 5px;\n  color: #25468e;\n`;\n\nexport const OverviewText = styled.p`\n  margin-bottom: 15px;\n`;\n\nexport const Genres = styled.p`\n  font-weight: bold;\n  margin-bottom: 5px;\n  color: #25468e;\n`;\n\nexport const GenresList = styled.span`\n  margin-right: 5px;\n`;\n","// import PropTypes from 'prop-types';\n\nimport {\n  FilmPoster,\n  CardWrap,\n  InfoWrap,\n  Title,\n  ReleaseDate,\n  Overview,\n  UserScore,\n  OverviewText,\n  Genres,\n  GenresList,\n} from './MovieCard.styled';\nimport defaultImg from '../../defaultImg/defaultImg.jpg';\n\nexport default function MovieCard({\n  name,\n  title,\n  release_date,\n  overview,\n  vote_average,\n  poster_path,\n  backdrop_path,\n  genres,\n  original_title\n}) {\n  \n\n  const IMG_PATH = \"https://image.tmdb.org/t/p/w500/\";\n  const posterImg =\n    poster_path || backdrop_path\n      ? IMG_PATH + (poster_path ?? backdrop_path)\n      : defaultImg;\n\n  return (\n    <CardWrap>\n      <FilmPoster src={posterImg} alt={title} />\n      <InfoWrap>\n        <Title>{title || original_title || name}</Title>\n        <ReleaseDate>\n          Release date: {release_date && release_date.slice(0, 4)}\n        </ReleaseDate>\n        <UserScore>User Score: {Math.round(vote_average * 10)}%</UserScore>\n        <Overview>Overview:</Overview>\n        <OverviewText>{overview}</OverviewText>\n        <Genres>Genres</Genres>\n        <p>\n          {genres &&\n            genres.map(({ id, name }) => (\n              <GenresList key={id}>{name},</GenresList>\n            ))}\n        </p>\n      </InfoWrap>\n    </CardWrap>\n  );\n}\n\n// MovieCard.propTypes = {\n//   movieInfo: PropTypes.object.isRequired,\n// };\n","import { useParams , useNavigate ,Link, Outlet ,useLocation} from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { getMovieDetails } from \"../../services/api\";\nimport MovieCard from \"../../modules/MovieCard\";\n\n// import { getMovieDetails } from \"services/api\";\n\nconst SingleMoviePage = () => {\n\n    const [movie, setMovie] = useState({});\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from || '/';\n\n  useEffect(() => {\n    async function fetchMovieInfo() {\n      if (!id) {\n        return;\n      }\n\n      try {\n        const response = await getMovieDetails(id);\n          setMovie(response);\n          \n\n        // console.log('movieDETAILs', response);\n      } catch (error) {\n        console.log('error', error);\n      }\n    }\n    fetchMovieInfo();\n  }, [id]);\n\n    // const { name,\n    //     title,\n    //     release_date,\n    //     overview,\n    //     vote_average,\n    //     poster_path,\n    //     backdrop_path,\n    //     genres,\n    //     original_title } = response;\n    \n    return (\n      <>\n        <button onClick={() => navigate(from)}>Go back</button>\n        <MovieCard\n          name={movie.name}\n          title={movie.title}\n          release_date={movie.release_date}\n          overview={movie.overview}\n          vote_average={movie.vote_average}\n          poster_path={movie.poster_path}\n          backdrop_path={movie.backdrop_path}\n          genres={movie.genres}\n          original_title={movie.original_title}\n        />\n\n        <Link to=\"cast\" state={{ from }}>\n          <p>Cast</p>\n        </Link>\n        <Link to=\"reviews\" state={{ from }}>\n          <p>Reviews</p>\n        </Link>\n        <Outlet context={id} />\n      </>\n    );\n};\nexport default SingleMoviePage;\n","import axios from \"axios\";\n\nconst API_KEY = 'e2607c9eac62b5ef95e86e9fe77035f2';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const API_URL = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`;\n\n\n\nexport const getTrending = async () => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`\n  );  \n\n  return response.data.results;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false&`\n  );\n\n  return response.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`\n  );\n\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n\n  return response.data;\n};"],"names":["CardWrap","styled","InfoWrap","FilmPoster","Title","ReleaseDate","UserScore","Overview","OverviewText","Genres","GenresList","MovieCard","name","title","release_date","overview","vote_average","poster_path","backdrop_path","genres","original_title","posterImg","defaultImg","src","alt","slice","Math","round","map","id","useState","movie","setMovie","useParams","navigate","useNavigate","from","useLocation","state","useEffect","getMovieDetails","response","console","log","fetchMovieInfo","onClick","to","context","API_KEY","getTrending","axios","data","results","searchMovies","query","getMovieCredits","getMovieReviews"],"sourceRoot":""}