{"version":3,"file":"static/js/539.a49e862b.chunk.js","mappings":"oUAEaA,EAAYC,EAAAA,GAAAA,GAAH,wFAMTC,EAAYD,EAAAA,GAAAA,GAAH,iEAKTE,EAAcF,EAAAA,GAAAA,EAAH,+GAOXG,EAAaH,EAAAA,GAAAA,IAAH,kNAeVI,GALWJ,EAAAA,GAAAA,IAAH,+DAKGA,EAAAA,GAAAA,IAAH,gEAKRK,EAAQL,EAAAA,GAAAA,EAAH,kI,yKCWlB,EA9Ce,WACb,OAA4BM,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAcjB,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE2BC,EAAAA,EAAAA,MAF3B,OAEUC,EAFV,OAGIL,EAAUK,GACVC,QAAQC,IAAI,WAAYF,GAJ5B,gDAMIC,QAAQC,IAAI,QAAS,KAASC,KAAKC,SANvC,0DADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,KAGD,iCACE,SAAC,KAAD,+BACA,SAAC,KAAD,UACGX,GACCA,EAAOY,KACL,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,eAAgBC,EAAzB,EAAyBA,GAAIC,EAA7B,EAA6BA,YAA7B,EAA0CC,aAA1C,OACE,SAAC,IAAD,WACE,SAAC,KAAD,CAAeC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMlB,GAAnD,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CACEmB,IAAG,0CAAqCL,GACxCM,IAAKT,KAGP,UAAC,KAAD,WACGA,GAAQC,EADX,WAPOC,IAFf,QAsBX,ECpCD,EATkB,WACd,OACI,+BAEI,SAAC,EAAD,KAIX,C,mMCVKQ,EAAU,mCAMHlB,GAJO,UADI,gCACJ,uCAA6CkB,GAIzC,mCAAG,oGACFC,EAAAA,EAAAA,IAAA,gEACoCD,IAFlC,cACnBjB,EADmB,yBAKlBA,EAASG,KAAKgB,SALI,2CAAH,sDAQXC,EAAY,mCAAG,WAAMC,GAAN,uFACHH,EAAAA,EAAAA,IAAA,4DACgCD,EADhC,kBACiDI,EADjD,0BADG,cACpBrB,EADoB,yBAKnBA,EAASG,KAAKgB,SALK,2CAAH,sDAQZG,EAAe,mCAAG,WAAMb,GAAN,uFACNS,EAAAA,EAAAA,IAAA,6CACiBT,EADjB,oBAC+BQ,IAFzB,cACvBjB,EADuB,yBAKtBA,EAASG,MALa,2CAAH,sDAQfoB,EAAe,mCAAG,WAAMd,GAAN,uFACNS,EAAAA,EAAAA,IAAA,6CACiBT,EADjB,4BACuCQ,IAFjC,cACvBjB,EADuB,yBAKtBA,EAASG,MALa,2CAAH,sDAQfqB,EAAe,mCAAG,WAAMf,GAAN,uFACNS,EAAAA,EAAAA,IAAA,6CACiBT,EADjB,4BACuCQ,IAFjC,cACvBjB,EADuB,yBAKtBA,EAASG,MALa,2CAAH,qD","sources":["modules/Movies/Movies.styled.js","modules/Movies/Movies.jsx","pages/HomePage/HomePage.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const MovieList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  \n`;\n\nexport const MovieItem = styled.li`\ntext-decoration:none;\nlist-style:none;\n`\n\nexport const PosterTitle = styled.p`\n  font-weight: bold;\n  color: #25468e;\n  margin-bottom: 15px;\n  text-align:center;\n`;\n\nexport const FilmPoster = styled.img`\n  display: block;\n  max-width: 100%;\n  height: auto;\n  border-radius: 5px;\n  width: 280px;\n  height: 400px;\n  margin-left: 35px;\n  box-shadow: rgb(0 0 0 / 70%) 5px 5px 13px 0px;\n`;\nexport const InfoWrap = styled.div`\n  margin-left: 35px;\n  width: 500px;\n`;\n\nexport const CardWrap = styled.div`\n  display: flex;\n  margin-top: 35px;\n`;\n\nexport const Title = styled.p`\n  font-weight: bold;\n  font-size: 32px;\n  color: #25468e;\n  margin-bottom: 20px;\n  text-align:center;\n`;","import { useEffect, useState } from \"react\";\nimport { getTrending } from \"../../services/api\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nimport {CardWrap, FilmPoster,  MovieItem, MovieList, PosterTitle,Title} from './Movies.styled'\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const location = useLocation();\n  useEffect(() => {\n    async function fetchMovies() {\n      try {\n        const response = await getTrending();\n        setMovies(response);\n        console.log(\"response\", response);\n      } catch (response) {\n        console.log(\"error\", response.data.message);\n      }\n    }\n    fetchMovies();\n  }, []);\n\n  return (\n    <>\n      <Title>Trending movies</Title>\n      <MovieList>\n        {movies &&\n          movies.map(\n            ({ name, original_title, id, poster_path, release_date }) => (\n              <CardWrap>\n                <Link key={id} to={`/movies/${id}`} state={{ from: location }}>\n                  <MovieItem>\n                    <FilmPoster\n                      src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                      alt={name}\n                    />\n\n                    <PosterTitle>\n                      {name || original_title} {}\n                      {/* {release_date && release_date.slice(0, 4)} */}\n                    </PosterTitle>\n\n                  </MovieItem>\n                </Link>\n              </CardWrap>\n            )\n          )}\n      </MovieList>\n    </>\n  );\n};\n\nexport default Movies;\n","// import { Title } from \"modules/MovieCard/MovieCard.styled\";\n\nimport Movies from \"../../modules/Movies/Movies\"\n\n const HomePage = () => {\n    return (\n        <>\n         \n            <Movies />    \n            \n        </>\n    )\n}\nexport default HomePage;","import axios from \"axios\";\n\nconst API_KEY = 'e2607c9eac62b5ef95e86e9fe77035f2';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const API_URL = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`;\n\n\n\nexport const getTrending = async () => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`\n  );  \n\n  return response.data.results;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false&`\n  );\n\n  return response.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`\n  );\n\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n\n  return response.data;\n};"],"names":["MovieList","styled","MovieItem","PosterTitle","FilmPoster","CardWrap","Title","useState","movies","setMovies","location","useLocation","useEffect","getTrending","response","console","log","data","message","fetchMovies","map","name","original_title","id","poster_path","release_date","to","state","from","src","alt","API_KEY","axios","results","searchMovies","query","getMovieDetails","getMovieCredits","getMovieReviews"],"sourceRoot":""}